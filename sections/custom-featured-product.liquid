<style>
  #shopify-section-{{section.id}} .slick-arrow{
    position: absolute;
    height: auto !important; width: auto !important;
  }
  
   #shopify-section-{{section.id}} .slick-dots{
      width: fit-content;
    margin: auto;
    left: 0;
    right: 0;
     }
   #shopify-section-{{section.id}} .slick-dots li{
    margin: 0px ;
  }
  #shopify-section-{{section.id}} .slick-dots li button:before {
     font-size: 12px !important;
  }
   #shopify-section-{{section.id}} .slick-dots{
    bottom: 10px;
  }
 #shopify-section-{{section.id}}  .slick-prev {
    left: 10px !important;
        top: 95% !important;
  }
  #shopify-section-{{section.id}} .slick-next{
    top: 95% !important;
    
    right: 20px !important;
  }
  .owl-stage{
    display: flex;
    overflow: hidden;
  }
  .owl-next,
  .owl-prev{
    background: transparent;
    border: none;
  }
  .owl-nav{
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
   #shopify-section-{{section.id}} .container{
     background-color: {{ section.settings.bgColor}};
     width: 100%;
     padding: 100px 5%;
     margin: auto;
   }
     #shopify-section-{{section.id}}  h2{
       font-size: 40px;
       margin: 0px;
       font-weight: bold;
     }
    #shopify-section-{{section.id}}  h3{
      font-size: 24px;
      margin: 5px 0px;
      font-weight: bold;
    }
   #shopify-section-{{section.id}}  .feature_item_info p{
      font-size: 20px;
     
     
    }
    #shopify-section-{{section.id}}  h3, #shopify-section-{{section.id}}  p , #shopify-section-{{section.id}}  h2 {
     color: {{ section.settings.fontcolor}};
  }
  #shopify-section-{{section.id}}  .row{
    display: grid; 
    gap: 100px;
    grid-template-columns: 1fr 1fr;
    padding: 40px 0px ;
  }
   #shopify-section-{{section.id}}  .row  .features_item{
     display: flex; 
     align-items: center;
     gap: 40px;
     
     
   }
  .features_items{
    display: flex;
    flex-direction: column;
    gap: 40px;
    overflow:hidden;
  }
  .feature_item_info{
    place-items: center;
  }
.featured_image_section {
  position: relative;
  height: 100%;
  width: 100%;
  align-items: center;
}

.featured_image_section img {
  position: sticky;
  top: 0; /* Adjust this value if needed to control the sticky position */
  width: 100%; /* Ensures the image covers the width of the section */
}
@media screen and (max-width: 991px){
  .featured_image_section{
    display: none;
  }
  .features_items{
    padding-bottom: 50px;
  }
   #shopify-section-{{section.id}}  .container{
      padding: 40px 20px !important;
   }
    #shopify-section-{{section.id}}  p{
      margin: 5px 0px !important;
    }
  .features_item{
    flex-direction: column;
    justify-content: start;
    align-items: start !important;
    gap: 0px !important;
    
    
  }
  .owl-dots{
            margin: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
        margin-top: -25px;
        width: fit-content;
  }
  .owl-dot.active{
    background: black;
  }
  .owl-dot{
    height: 10px;
    width: 10px;
    border: none;
    border-radius: 50%;
  }
  .features_item img{
    width: 100%;
  }
  .features_items{
    gap: 0px !important;
  }
 
    #shopify-section-{{section.id}} .container .row{
    display: grid; 
  
    grid-template-columns: 1fr;
    }
  .h2_mobile{
    display: block !important;
  }
   .h2_Desktop{
    display: none !important;
  }
  .feature_item_image img{
    width: 100% !important;
    height: auto !important;
  }
  .feature_item_info{
    margin-top: 10px;
  }
  .feature_item_image{
    width: 100%;
  }
}
  .h2_mobile{
    display: none ;
  }
   .h2_Desktop{
    display: block ;
  }
  .features_items .slick-slide {
    padding: 0 10px; /* Adjust this value to set the gap between slides */
}
</style>


<section>
  <div class="container">
  
<div class="Features_section">
    <h2 class="h2_mobile">{{ section.settings.headline }}</h2>
  
    <div class="row"> 
  <div class="features_items">
    <h2 class="h2_Desktop">{{ section.settings.headline }}</h2>
    
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'Features' %}
      <div class="features_item">
             <div class="feature_item_image"> 
              <img src="{{ block.settings.Thumbnail | image_url }}" height="280" width="280" />
             </div>
             <div class="feature_item_info"> 
              <h3>{{ block.settings.Headline }}</h3>
               <p style="color: {{ section.settings.fontcolor}} !important;"> {{ block.settings.Description }}</p>
             </div>
             
           </div>
        {% endcase %}
    {% endfor %}
         
    </div>
    <div class="featured_image_section">
     <img src="{{ section.settings.featured_image | image_url }}" height="640" width="auto" />
    </div>
    </div>
      
  </div>
  
    
  </div>
</section>
<script src="https://code.jquery.com/jquery-3.7.1.slim.min.js" integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=" crossorigin="anonymous"></script>
<!-- Slick Slider CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css">

<!-- Slick Slider JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
<script>
$(document).ready(function() {
    function initializeCarousel() {
        if ($(window).width() < 991) {
            if (!$('.features_items').hasClass('owl-loaded')) {
             $(document).ready(function() {
$(document).ready(function(){
    $('.features_items').slick({
           dots: true,
        infinite: true,
        slidesToShow: 3, // Number of items to show
        slidesToScroll: 1, // Number of items to scroll

        arrows: true, // Show arrows for navigation
        prevArrow: '<button type="button" class="slick-prev"><svg xmlns="http://www.w3.org/2000/svg" width="auto" height="25" viewBox="0 0 23 18" fill="none"><path opacity="0.5" d="M23 9.00024L1 9.00024M1 9.00024L9.55556 17.0002M1 9.00024L9.55556 1.00024" stroke="#4A4E58"/></svg></button>',
        nextArrow: '<button type="button" class="slick-next"><svg xmlns="http://www.w3.org/2000/svg" width="auto" height="25" viewBox="0 0 23 18" fill="none"><path d="M0 9.00024L22 9.00024M22 9.00024L13.4444 1.00024M22 9.00024L13.4444 17.0002" stroke="#4A4E58"/></svg></button>',
        responsive: [
            {
                breakpoint: 991,
                settings: {
                    slidesToShow: 2
                }
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToShow: 1
                }
            },
            {
                breakpoint: 0,
                settings: {
                    slidesToShow: 1
                }
            }
        ]
    });
});

});


            }
        } else {
            if ($('.features_items').hasClass('owl-loaded')) {
                $('.features_items').trigger('destroy.owl.carousel').removeClass('owl-loaded');
            }
        }
    }

    // Initialize carousel on page load
    initializeCarousel();

    // Reinitialize carousel on window resize
    $(window).resize(function() {
        initializeCarousel();
    });
});
document.addEventListener('DOMContentLoaded', () => {
  const featuredImage = document.querySelector('.featured_image_section img');
  const featuresItems = Array.from(document.querySelectorAll('.features_item'));

  let currentIndex = -1; // Initialize index

  function updateFeaturedImage() {
    let newIndex = -1;

    // Determine which item is the most visible in the viewport
    featuresItems.forEach((item, index) => {
      const rect = item.getBoundingClientRect();

      // Check if the item is within the viewport
      if (rect.top <= window.innerHeight && rect.bottom >= 0) {
        if (newIndex === -1 || rect.top < featuresItems[newIndex].getBoundingClientRect().top) {
          newIndex = index;
        }
      }
    });

    // Move to the next image if necessary
    if (newIndex !== -1 && newIndex !== currentIndex) {
      const nextItem = featuresItems[newIndex];
      const nextImg = nextItem.querySelector('img');

      if (nextImg) {
        featuredImage.src = nextImg.src;
        currentIndex = newIndex; // Update the current index
      }
    }
  }

  // Debounce function
  let debounceTimeout;
  function debounce(func, delay) {
    clearTimeout(debounceTimeout);
    debounceTimeout = setTimeout(func, delay);
  }

  // Add scroll event listener with debounce
  window.addEventListener('scroll', () => {
    debounce(updateFeaturedImage, 100); // Adjust timeout as needed
  });

  // Initial call to set the correct image if it's already in view
  updateFeaturedImage();
});



</script>
 

{% schema %}
  {
    "name": "Product Features",
    "settings": [
    
      {
        "type" : "color",
        "id": "bgColor",
        "label": "Background color"
      },
      {
        "type" : "color",
        "id": "fontcolor",
        "label": "Font color"
      },
      {
        "type" : "text",
        "id": "headline",
        "label": "Headline"
      },
      {
         "type" : "image_picker",
        "id": "featured_image",
        "label": "Main image"
      }
    ],
    "blocks": [
      {
        "type":"Features",
        "name": "Features",
        "settings":[
          {
            "type": "image_picker",
            "id": "Thumbnail",
            "label": "Thumbnail"
          },
          {
            "type": "text",
            "id": "Headline",
            "label": "Headline"
          },
          {
            "type": "text",
            "id": "Description",
            "label": "Description"
          }
        ]
      }
    ],
    "presets":[
       {
         "name": "Product Features"
       }
    ]
  }
{% endschema %}